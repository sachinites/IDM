
#ifndef FILE_DOWNLOADER_STATES_H
#define FILE_DOWNLOADER_STATES_H

typedef enum DownLoader_STATES_ {
	
	/* Downloader has been initialized with all required information
	 * such as file name, server name, protocol to use ( HTTP/HTTPS/FTP )
	 */
	DNLOAD_STATE_INIT,

	/* HEAD STATES */
	DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS,
	DNLOAD_STATE_HEAD_CONNECTED,
	DNLOAD_STATE_HEAD_CONNECTION_FAILED,

	/* FILE Download Connect States */
	DNLOAD_STATE_FD_CONNECT_IN_PROGRESS,
	DNLOAD_STATE_FD_CONNECTED,
	DNLOAD_STATE_FD_CONNECTION_FAILED,

	/* FILE Download States */
	DNLOAD_STATE_FD_IN_PROGRESS,
	DNLOAD_STATE_FD_SUSPENDED,
	DNLOAD_STATE_FD_CANCELLED,
	DNLOAD_STATE_FD_FINISHED,

	/* End State */
	DNLOAD_STATE_DONE,
	DNLOAD_STATE_MAX

} DNLOADER_STATE_T;


typedef enum DoanLoader_EVENTS_ {

	/* Events issued by User on Dnloader */
	DNLOAD_EVENT_CANCEL,
	DNLOAD_EVENT_PAUSE,
	DNLOAD_EVENT_RESUME,
	DNLOAD_EVENT_START,
	DNLOAD_EVENT_CLEANUP,
	DNLOAD_EVENT_RECONNECT,
	/* Events Issues by Dnloader itself */
	DNLOAD_EVENT_FINISHED,
	DNLOAD_EVENT_LOST_CONNECTION,
	DNLOAD_EVENT_CONNECT_SUCCESS,
	DNLOAD_EVENT_CONNECT_FAILED,
	DNLOAD_EVENT_MAX

} DNLOAD_EVENTS_T;

static const char *
file_downloader_state_tostring (state_id_t state_id) {

	DNLOADER_STATE_T state = (DNLOADER_STATE_T)state_id;

	switch (state) {

		case DNLOAD_STATE_INIT:
			return "DNLOAD_STATE_INIT";
		case DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS:
			return "DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS";
		case DNLOAD_STATE_HEAD_CONNECTED:
			return "DNLOAD_STATE_HEAD_CONNECTED";
		case DNLOAD_STATE_HEAD_CONNECTION_FAILED:
			return "DNLOAD_STATE_HEAD_CONNECTION_FAILED";
		case DNLOAD_STATE_FD_CONNECT_IN_PROGRESS:
			return "DNLOAD_STATE_FD_CONNECT_IN_PROGRESS";
		case DNLOAD_STATE_FD_CONNECTED:
			return "DNLOAD_STATE_FD_CONNECTED";
		case DNLOAD_STATE_FD_CONNECTION_FAILED:
			return "DNLOAD_STATE_FD_CONNECTION_FAILED";
		case DNLOAD_STATE_FD_IN_PROGRESS:
			return "DNLOAD_STATE_FD_IN_PROGRESS";
		case DNLOAD_STATE_FD_SUSPENDED:
			return "DNLOAD_STATE_FD_SUSPENDED";
		case DNLOAD_STATE_FD_CANCELLED:
			return "DNLOAD_STATE_FD_CANCELLED";
		case DNLOAD_STATE_FD_FINISHED:
			return "DNLOAD_STATE_FD_FINISHED";
		case DNLOAD_STATE_DONE:
			return "DNLOAD_STATE_DONE";
		case DNLOAD_STATE_MAX:
			return NULL;
		default:;
	}
	return NULL;
}

static const char *
file_downloader_event_tostring (int event) {

	switch (event) {

		case DNLOAD_EVENT_CANCEL:
			return "DNLOAD_EVENT_CANCEL";
		case DNLOAD_EVENT_PAUSE:
			return "DNLOAD_EVENT_PAUSE";
		case DNLOAD_EVENT_RESUME:
			return "DNLOAD_EVENT_RESUME";
		case DNLOAD_EVENT_START:
			return "DNLOAD_EVENT_START";
		case DNLOAD_EVENT_CLEANUP:
			return "DNLOAD_EVENT_CLEANUP";
		case DNLOAD_EVENT_RECONNECT:
			return "DNLOAD_EVENT_RECONNECT";
		case DNLOAD_EVENT_FINISHED:
			return "DNLOAD_EVENT_FINISHED";
		case DNLOAD_EVENT_LOST_CONNECTION:
			return "DNLOAD_EVENT_LOST_CONNECTION";
		case DNLOAD_EVENT_CONNECT_SUCCESS:
			return "DNLOAD_EVENT_CONNECT_SUCCESS";
		case DNLOAD_EVENT_CONNECT_FAILED:
			return "DNLOAD_EVENT_CONNECT_FAILED";
		case DNLOAD_EVENT_MAX:
			return "DNLOAD_EVENT_MAX";
		default:;
	}
	return NULL;
}

/* Transition Table */

/* Initial State : DNLOAD_STATE_INIT
 *
 * DNLOAD_EVENT_CANCEL     	NA
 * DNLOAD_EVENT_PAUSE      	NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS     try to establish connection with server
 * DNLOAD_STATE_CLEANUP    	NA
 * DNLOAD_EVENT_RECONNECT  	NA					
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA 
 *
 * Initial State : DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS
 
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_DONE			   cancel connector thread, release all resources
 * DNLOAD_EVENT_PAUSE      	DNLOAD_STATE_HEAD_CONNECTION_FAILED	   cancel connector thread, release all resources
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   cancel connector thread, release all resources
 * DNLOAD_EVENT_RECONNECT  	NA					
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS DNLOAD_STATE_HEAD_CONNECTED                fsm_fire_event(efsm, DNLOAD_EVENT_START)
 * DNLOAD_EVENT_CONNECT_FAILED  DNLOAD_STATE_INIT			   cancel connector thread, release all resources, fsm_fire_event(efsm, DNLOAD_EVENT_START)
 *
 * Initial State : DNLOAD_STATE_HEAD_CONNECTED
 *
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_DONE			   close the conneciton, release all resources
 * DNLOAD_EVENT_PAUSE      	NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	DNLOAD_STATE_FD_CONNECT_IN_PROGRES
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   close the conneciton, release all resources
 * DNLOAD_EVENT_RECONNECT  	NA					
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_HEAD_CONNECTION_FAILED
 *
 * DNLOAD_EVENT_CANCEL          DNLOAD_STATE_INIT	 		   release all resources, fsm_fire_event(efsm, DNLOAD_EVENT_START)
 * DNLOAD_EVENT_PAUSE      	NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   close the conneciton, release all resources
 * DNLOAD_EVENT_RECONNECT  	DNLOAD_STATE_HEAD_CONNECT_IN_PROGRESS     start the connect-retry thread					
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_CONNECT_IN_PROGRESS
 *
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_FD_CANCELLED		   release all resources
 * DNLOAD_EVENT_PAUSE      	DNLOAD_STATE_FD_CONNECTION_FAILED	   release all resources
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   release all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS DNLOAD_STATE_FD_CONNECTED		   efsm_fire_event(DNLOAD_EVENT_START);
 * DNLOAD_EVENT_CONNECT_FAILED  DNLOAD_STATE_FD_CONNECTION_FAILED
 *
 * Initial State : DNLOAD_STATE_FD_CONNECTED
 *
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_FD_CANCELLED		   release all resources
 * DNLOAD_EVENT_PAUSE      	NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	DNLOAD_STATE_FD_IN_PROGRESS
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   release all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_CONNECTION_FAILED
 *
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_FD_CANCELLED
 * DNLOAD_EVENT_PAUSE      	NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   release all resources
 * DNLOAD_EVENT_RECONNECT  	DNLOAD_STATE_FD_CONNECT_IN_PROGRESS
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_IN_PROGRESS
 *
 * DNLOAD_EVENT_CANCEL    DNLOAD_STATE_FD_CANCELLED		   release all resources
 * DNLOAD_EVENT_PAUSE      	DNLOAD_STATE_FD_SUSPENDED 		   close the connection, remember the bytes saved
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   release all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	DNLOAD_STATE_FD_FINISHED
 * DNLOAD_EVENT_LOST_CONNECTION DNLOAD_STATE_FD_CONNECT_IN_PROGRESS
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_SUSPENDED
 *
 * DNLOAD_EVENT_CANCEL     	DNLOAD_STATE_FD_CANCELLED    		   Free all resources 
 * DNLOAD_EVENT_PAUSE           NA
 * DNLOAD_EVENT_RESUME     	DNLOAD_STATE_FD_CONNECT_IN_PROGRESS	   connect to server again
 * DNLOAD_EVENT_START      	DNLOAD_STATE_FD_CONNECT_IN_PROGRESS	   connect to server again
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   Free all resources
 * DNLOAD_EVENT_RECONNECT  	DNLOAD_STATE_FD_CONNECT_IN_PROGRESS					
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_CANCELLED
 *
 * DNLOAD_EVENT_CANCEL     	NA
 * DNLOAD_EVENT_PAUSE           NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   Free all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_FD_FINISHED
 *
 * DNLOAD_EVENT_CANCEL     	NA
 * DNLOAD_EVENT_PAUSE           NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	DNLOAD_STATE_INIT			   Free old resourced, ready do download file again
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   Free all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 *
 * Initial State : DNLOAD_STATE_DONE
 *
 * DNLOAD_EVENT_CANCEL     	NA
 * DNLOAD_EVENT_PAUSE           NA
 * DNLOAD_EVENT_RESUME     	NA
 * DNLOAD_EVENT_START      	NA
 * DNLOAD_STATE_CLEANUP    	DNLOAD_STATE_DONE			   Free all resources
 * DNLOAD_EVENT_RECONNECT  	NA
 * DNLOAD_EVENT_FINISHED   	NA
 * DNLOAD_EVENT_LOST_CONNECTION NA
 * DNLOAD_EVENT_CONNECT_SUCCESS NA
 * DNLOAD_EVENT_CONNECT_FAILED  NA
 */ 











#endif 
